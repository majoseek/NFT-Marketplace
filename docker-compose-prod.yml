version: '3.8'
networks:
  local-network:
    driver: bridge

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
    networks:
      - local-network
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    depends_on:
      - mongo
      - rabbitmq
      - backend
    networks:
      - local-network
  mongo:
    container_name: mongo
    image: mongo:6.0.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - local-network
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.2-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - '15672:15672' # HTTP management UI
    networks:
      - local-network

  nft:
    container_name: nft
    build:
      context: ./backend
      dockerfile: ./nft/Dockerfile
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://nft:password@mongo:27017/admin
      SPRING_DATA_MONGODB_DATABASE: nft
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: password
      GRADLE_OPTS: "-Dorg.gradle.vfs.watch=false"
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - '8081:8081'
    networks:
      - local-network
  auction:
    container_name: auction
    build:
      context: backend
      dockerfile: auction/Dockerfile
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://auction:password@mongo:27017/admin
      SPRING_DATA_MONGODB_DATABASE: auction
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: password
      GRADLE_OPTS: "-Dorg.gradle.vfs.watch=false"
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - '8080:8080'
    networks:
      - local-network
  projection-service:
    container_name: projection-service
    build:
      context: backend
      dockerfile: projectionservice/Dockerfile
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://projectionservice:password@mongo:27017/admin
      SPRING_DATA_MONGODB_DATABASE: projectionservice
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: password
      GRADLE_OPTS: "-Dorg.gradle.vfs.watch=false"
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - '8082:8082'
    networks:
      - local-network
    restart:
        on-failure
